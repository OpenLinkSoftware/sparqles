/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package sparqles.avro.calculation;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CResult\",\"namespace\":\"sparqles.avro.calculation\",\"fields\":[{\"name\":\"endpointResult\",\"type\":{\"type\":\"record\",\"name\":\"EndpointResult\",\"namespace\":\"sparqles.avro\",\"fields\":[{\"name\":\"endpoint\",\"type\":{\"type\":\"record\",\"name\":\"Endpoint\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"datasets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Dataset\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"}]}}}]}},{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"end\",\"type\":\"long\"}],\"import\":\"Endpoint.avsc\"}},{\"name\":\"triples\",\"type\":\"int\"},{\"name\":\"entities\",\"type\":\"int\"},{\"name\":\"classes\",\"type\":\"int\"},{\"name\":\"properties\",\"type\":\"int\"},{\"name\":\"distinctSubjects\",\"type\":\"int\"},{\"name\":\"distinctObjects\",\"type\":\"int\"},{\"name\":\"exampleResources\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"coherence\",\"type\":\"double\"},{\"name\":\"RS\",\"type\":\"double\"}],\"import\":\"EndpointResult.avsc\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public sparqles.avro.EndpointResult endpointResult;
  @Deprecated public int triples;
  @Deprecated public int entities;
  @Deprecated public int classes;
  @Deprecated public int properties;
  @Deprecated public int distinctSubjects;
  @Deprecated public int distinctObjects;
  @Deprecated public java.util.List<java.lang.CharSequence> exampleResources;
  @Deprecated public double coherence;
  @Deprecated public double RS;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public CResult() {}

  /**
   * All-args constructor.
   */
  public CResult(sparqles.avro.EndpointResult endpointResult, java.lang.Integer triples, java.lang.Integer entities, java.lang.Integer classes, java.lang.Integer properties, java.lang.Integer distinctSubjects, java.lang.Integer distinctObjects, java.util.List<java.lang.CharSequence> exampleResources, java.lang.Double coherence, java.lang.Double RS) {
    this.endpointResult = endpointResult;
    this.triples = triples;
    this.entities = entities;
    this.classes = classes;
    this.properties = properties;
    this.distinctSubjects = distinctSubjects;
    this.distinctObjects = distinctObjects;
    this.exampleResources = exampleResources;
    this.coherence = coherence;
    this.RS = RS;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return endpointResult;
    case 1: return triples;
    case 2: return entities;
    case 3: return classes;
    case 4: return properties;
    case 5: return distinctSubjects;
    case 6: return distinctObjects;
    case 7: return exampleResources;
    case 8: return coherence;
    case 9: return RS;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: endpointResult = (sparqles.avro.EndpointResult)value$; break;
    case 1: triples = (java.lang.Integer)value$; break;
    case 2: entities = (java.lang.Integer)value$; break;
    case 3: classes = (java.lang.Integer)value$; break;
    case 4: properties = (java.lang.Integer)value$; break;
    case 5: distinctSubjects = (java.lang.Integer)value$; break;
    case 6: distinctObjects = (java.lang.Integer)value$; break;
    case 7: exampleResources = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: coherence = (java.lang.Double)value$; break;
    case 9: RS = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'endpointResult' field.
   */
  public sparqles.avro.EndpointResult getEndpointResult() {
    return endpointResult;
  }

  /**
   * Sets the value of the 'endpointResult' field.
   * @param value the value to set.
   */
  public void setEndpointResult(sparqles.avro.EndpointResult value) {
    this.endpointResult = value;
  }

  /**
   * Gets the value of the 'triples' field.
   */
  public java.lang.Integer getTriples() {
    return triples;
  }

  /**
   * Sets the value of the 'triples' field.
   * @param value the value to set.
   */
  public void setTriples(java.lang.Integer value) {
    this.triples = value;
  }

  /**
   * Gets the value of the 'entities' field.
   */
  public java.lang.Integer getEntities() {
    return entities;
  }

  /**
   * Sets the value of the 'entities' field.
   * @param value the value to set.
   */
  public void setEntities(java.lang.Integer value) {
    this.entities = value;
  }

  /**
   * Gets the value of the 'classes' field.
   */
  public java.lang.Integer getClasses() {
    return classes;
  }

  /**
   * Sets the value of the 'classes' field.
   * @param value the value to set.
   */
  public void setClasses(java.lang.Integer value) {
    this.classes = value;
  }

  /**
   * Gets the value of the 'properties' field.
   */
  public java.lang.Integer getProperties() {
    return properties;
  }

  /**
   * Sets the value of the 'properties' field.
   * @param value the value to set.
   */
  public void setProperties(java.lang.Integer value) {
    this.properties = value;
  }

  /**
   * Gets the value of the 'distinctSubjects' field.
   */
  public java.lang.Integer getDistinctSubjects() {
    return distinctSubjects;
  }

  /**
   * Sets the value of the 'distinctSubjects' field.
   * @param value the value to set.
   */
  public void setDistinctSubjects(java.lang.Integer value) {
    this.distinctSubjects = value;
  }

  /**
   * Gets the value of the 'distinctObjects' field.
   */
  public java.lang.Integer getDistinctObjects() {
    return distinctObjects;
  }

  /**
   * Sets the value of the 'distinctObjects' field.
   * @param value the value to set.
   */
  public void setDistinctObjects(java.lang.Integer value) {
    this.distinctObjects = value;
  }

  /**
   * Gets the value of the 'exampleResources' field.
   */
  public java.util.List<java.lang.CharSequence> getExampleResources() {
    return exampleResources;
  }

  /**
   * Sets the value of the 'exampleResources' field.
   * @param value the value to set.
   */
  public void setExampleResources(java.util.List<java.lang.CharSequence> value) {
    this.exampleResources = value;
  }

  /**
   * Gets the value of the 'coherence' field.
   */
  public java.lang.Double getCoherence() {
    return coherence;
  }

  /**
   * Sets the value of the 'coherence' field.
   * @param value the value to set.
   */
  public void setCoherence(java.lang.Double value) {
    this.coherence = value;
  }

  /**
   * Gets the value of the 'RS' field.
   */
  public java.lang.Double getRS() {
    return RS;
  }

  /**
   * Sets the value of the 'RS' field.
   * @param value the value to set.
   */
  public void setRS(java.lang.Double value) {
    this.RS = value;
  }

  /** Creates a new CResult RecordBuilder */
  public static sparqles.avro.calculation.CResult.Builder newBuilder() {
    return new sparqles.avro.calculation.CResult.Builder();
  }
  
  /** Creates a new CResult RecordBuilder by copying an existing Builder */
  public static sparqles.avro.calculation.CResult.Builder newBuilder(sparqles.avro.calculation.CResult.Builder other) {
    return new sparqles.avro.calculation.CResult.Builder(other);
  }
  
  /** Creates a new CResult RecordBuilder by copying an existing CResult instance */
  public static sparqles.avro.calculation.CResult.Builder newBuilder(sparqles.avro.calculation.CResult other) {
    return new sparqles.avro.calculation.CResult.Builder(other);
  }
  
  /**
   * RecordBuilder for CResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CResult>
    implements org.apache.avro.data.RecordBuilder<CResult> {

    private sparqles.avro.EndpointResult endpointResult;
    private int triples;
    private int entities;
    private int classes;
    private int properties;
    private int distinctSubjects;
    private int distinctObjects;
    private java.util.List<java.lang.CharSequence> exampleResources;
    private double coherence;
    private double RS;

    /** Creates a new Builder */
    private Builder() {
      super(sparqles.avro.calculation.CResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(sparqles.avro.calculation.CResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.endpointResult)) {
        this.endpointResult = data().deepCopy(fields()[0].schema(), other.endpointResult);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.triples)) {
        this.triples = data().deepCopy(fields()[1].schema(), other.triples);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entities)) {
        this.entities = data().deepCopy(fields()[2].schema(), other.entities);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.classes)) {
        this.classes = data().deepCopy(fields()[3].schema(), other.classes);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.properties)) {
        this.properties = data().deepCopy(fields()[4].schema(), other.properties);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.distinctSubjects)) {
        this.distinctSubjects = data().deepCopy(fields()[5].schema(), other.distinctSubjects);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.distinctObjects)) {
        this.distinctObjects = data().deepCopy(fields()[6].schema(), other.distinctObjects);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.exampleResources)) {
        this.exampleResources = data().deepCopy(fields()[7].schema(), other.exampleResources);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.coherence)) {
        this.coherence = data().deepCopy(fields()[8].schema(), other.coherence);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.RS)) {
        this.RS = data().deepCopy(fields()[9].schema(), other.RS);
        fieldSetFlags()[9] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CResult instance */
    private Builder(sparqles.avro.calculation.CResult other) {
            super(sparqles.avro.calculation.CResult.SCHEMA$);
      if (isValidValue(fields()[0], other.endpointResult)) {
        this.endpointResult = data().deepCopy(fields()[0].schema(), other.endpointResult);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.triples)) {
        this.triples = data().deepCopy(fields()[1].schema(), other.triples);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entities)) {
        this.entities = data().deepCopy(fields()[2].schema(), other.entities);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.classes)) {
        this.classes = data().deepCopy(fields()[3].schema(), other.classes);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.properties)) {
        this.properties = data().deepCopy(fields()[4].schema(), other.properties);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.distinctSubjects)) {
        this.distinctSubjects = data().deepCopy(fields()[5].schema(), other.distinctSubjects);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.distinctObjects)) {
        this.distinctObjects = data().deepCopy(fields()[6].schema(), other.distinctObjects);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.exampleResources)) {
        this.exampleResources = data().deepCopy(fields()[7].schema(), other.exampleResources);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.coherence)) {
        this.coherence = data().deepCopy(fields()[8].schema(), other.coherence);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.RS)) {
        this.RS = data().deepCopy(fields()[9].schema(), other.RS);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'endpointResult' field */
    public sparqles.avro.EndpointResult getEndpointResult() {
      return endpointResult;
    }
    
    /** Sets the value of the 'endpointResult' field */
    public sparqles.avro.calculation.CResult.Builder setEndpointResult(sparqles.avro.EndpointResult value) {
      validate(fields()[0], value);
      this.endpointResult = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'endpointResult' field has been set */
    public boolean hasEndpointResult() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'endpointResult' field */
    public sparqles.avro.calculation.CResult.Builder clearEndpointResult() {
      endpointResult = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'triples' field */
    public java.lang.Integer getTriples() {
      return triples;
    }
    
    /** Sets the value of the 'triples' field */
    public sparqles.avro.calculation.CResult.Builder setTriples(int value) {
      validate(fields()[1], value);
      this.triples = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'triples' field has been set */
    public boolean hasTriples() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'triples' field */
    public sparqles.avro.calculation.CResult.Builder clearTriples() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'entities' field */
    public java.lang.Integer getEntities() {
      return entities;
    }
    
    /** Sets the value of the 'entities' field */
    public sparqles.avro.calculation.CResult.Builder setEntities(int value) {
      validate(fields()[2], value);
      this.entities = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'entities' field has been set */
    public boolean hasEntities() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'entities' field */
    public sparqles.avro.calculation.CResult.Builder clearEntities() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'classes' field */
    public java.lang.Integer getClasses() {
      return classes;
    }
    
    /** Sets the value of the 'classes' field */
    public sparqles.avro.calculation.CResult.Builder setClasses(int value) {
      validate(fields()[3], value);
      this.classes = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'classes' field has been set */
    public boolean hasClasses() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'classes' field */
    public sparqles.avro.calculation.CResult.Builder clearClasses() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'properties' field */
    public java.lang.Integer getProperties() {
      return properties;
    }
    
    /** Sets the value of the 'properties' field */
    public sparqles.avro.calculation.CResult.Builder setProperties(int value) {
      validate(fields()[4], value);
      this.properties = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'properties' field has been set */
    public boolean hasProperties() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'properties' field */
    public sparqles.avro.calculation.CResult.Builder clearProperties() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'distinctSubjects' field */
    public java.lang.Integer getDistinctSubjects() {
      return distinctSubjects;
    }
    
    /** Sets the value of the 'distinctSubjects' field */
    public sparqles.avro.calculation.CResult.Builder setDistinctSubjects(int value) {
      validate(fields()[5], value);
      this.distinctSubjects = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'distinctSubjects' field has been set */
    public boolean hasDistinctSubjects() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'distinctSubjects' field */
    public sparqles.avro.calculation.CResult.Builder clearDistinctSubjects() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'distinctObjects' field */
    public java.lang.Integer getDistinctObjects() {
      return distinctObjects;
    }
    
    /** Sets the value of the 'distinctObjects' field */
    public sparqles.avro.calculation.CResult.Builder setDistinctObjects(int value) {
      validate(fields()[6], value);
      this.distinctObjects = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'distinctObjects' field has been set */
    public boolean hasDistinctObjects() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'distinctObjects' field */
    public sparqles.avro.calculation.CResult.Builder clearDistinctObjects() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'exampleResources' field */
    public java.util.List<java.lang.CharSequence> getExampleResources() {
      return exampleResources;
    }
    
    /** Sets the value of the 'exampleResources' field */
    public sparqles.avro.calculation.CResult.Builder setExampleResources(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.exampleResources = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'exampleResources' field has been set */
    public boolean hasExampleResources() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'exampleResources' field */
    public sparqles.avro.calculation.CResult.Builder clearExampleResources() {
      exampleResources = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'coherence' field */
    public java.lang.Double getCoherence() {
      return coherence;
    }
    
    /** Sets the value of the 'coherence' field */
    public sparqles.avro.calculation.CResult.Builder setCoherence(double value) {
      validate(fields()[8], value);
      this.coherence = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'coherence' field has been set */
    public boolean hasCoherence() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'coherence' field */
    public sparqles.avro.calculation.CResult.Builder clearCoherence() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'RS' field */
    public java.lang.Double getRS() {
      return RS;
    }
    
    /** Sets the value of the 'RS' field */
    public sparqles.avro.calculation.CResult.Builder setRS(double value) {
      validate(fields()[9], value);
      this.RS = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'RS' field has been set */
    public boolean hasRS() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'RS' field */
    public sparqles.avro.calculation.CResult.Builder clearRS() {
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public CResult build() {
      try {
        CResult record = new CResult();
        record.endpointResult = fieldSetFlags()[0] ? this.endpointResult : (sparqles.avro.EndpointResult) defaultValue(fields()[0]);
        record.triples = fieldSetFlags()[1] ? this.triples : (java.lang.Integer) defaultValue(fields()[1]);
        record.entities = fieldSetFlags()[2] ? this.entities : (java.lang.Integer) defaultValue(fields()[2]);
        record.classes = fieldSetFlags()[3] ? this.classes : (java.lang.Integer) defaultValue(fields()[3]);
        record.properties = fieldSetFlags()[4] ? this.properties : (java.lang.Integer) defaultValue(fields()[4]);
        record.distinctSubjects = fieldSetFlags()[5] ? this.distinctSubjects : (java.lang.Integer) defaultValue(fields()[5]);
        record.distinctObjects = fieldSetFlags()[6] ? this.distinctObjects : (java.lang.Integer) defaultValue(fields()[6]);
        record.exampleResources = fieldSetFlags()[7] ? this.exampleResources : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.coherence = fieldSetFlags()[8] ? this.coherence : (java.lang.Double) defaultValue(fields()[8]);
        record.RS = fieldSetFlags()[9] ? this.RS : (java.lang.Double) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
