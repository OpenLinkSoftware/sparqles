/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package sparqles.avro.analytics;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Profile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Profile\",\"namespace\":\"sparqles.avro.analytics\",\"fields\":[{\"name\":\"endpoint\",\"type\":{\"type\":\"record\",\"name\":\"Endpoint\",\"namespace\":\"sparqles.avro\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"datasets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Dataset\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"}]}}}]}},{\"name\":\"VoID\",\"type\":\"string\"},{\"name\":\"SD\",\"type\":\"string\"},{\"name\":\"lastUpdate\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public sparqles.avro.Endpoint endpoint;
  @Deprecated public java.lang.CharSequence VoID;
  @Deprecated public java.lang.CharSequence SD;
  @Deprecated public long lastUpdate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public Profile() {}

  /**
   * All-args constructor.
   */
  public Profile(sparqles.avro.Endpoint endpoint, java.lang.CharSequence VoID, java.lang.CharSequence SD, java.lang.Long lastUpdate) {
    this.endpoint = endpoint;
    this.VoID = VoID;
    this.SD = SD;
    this.lastUpdate = lastUpdate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return endpoint;
    case 1: return VoID;
    case 2: return SD;
    case 3: return lastUpdate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: endpoint = (sparqles.avro.Endpoint)value$; break;
    case 1: VoID = (java.lang.CharSequence)value$; break;
    case 2: SD = (java.lang.CharSequence)value$; break;
    case 3: lastUpdate = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'endpoint' field.
   */
  public sparqles.avro.Endpoint getEndpoint() {
    return endpoint;
  }

  /**
   * Sets the value of the 'endpoint' field.
   * @param value the value to set.
   */
  public void setEndpoint(sparqles.avro.Endpoint value) {
    this.endpoint = value;
  }

  /**
   * Gets the value of the 'VoID' field.
   */
  public java.lang.CharSequence getVoID() {
    return VoID;
  }

  /**
   * Sets the value of the 'VoID' field.
   * @param value the value to set.
   */
  public void setVoID(java.lang.CharSequence value) {
    this.VoID = value;
  }

  /**
   * Gets the value of the 'SD' field.
   */
  public java.lang.CharSequence getSD() {
    return SD;
  }

  /**
   * Sets the value of the 'SD' field.
   * @param value the value to set.
   */
  public void setSD(java.lang.CharSequence value) {
    this.SD = value;
  }

  /**
   * Gets the value of the 'lastUpdate' field.
   */
  public java.lang.Long getLastUpdate() {
    return lastUpdate;
  }

  /**
   * Sets the value of the 'lastUpdate' field.
   * @param value the value to set.
   */
  public void setLastUpdate(java.lang.Long value) {
    this.lastUpdate = value;
  }

  /** Creates a new Profile RecordBuilder */
  public static sparqles.avro.analytics.Profile.Builder newBuilder() {
    return new sparqles.avro.analytics.Profile.Builder();
  }
  
  /** Creates a new Profile RecordBuilder by copying an existing Builder */
  public static sparqles.avro.analytics.Profile.Builder newBuilder(sparqles.avro.analytics.Profile.Builder other) {
    return new sparqles.avro.analytics.Profile.Builder(other);
  }
  
  /** Creates a new Profile RecordBuilder by copying an existing Profile instance */
  public static sparqles.avro.analytics.Profile.Builder newBuilder(sparqles.avro.analytics.Profile other) {
    return new sparqles.avro.analytics.Profile.Builder(other);
  }
  
  /**
   * RecordBuilder for Profile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Profile>
    implements org.apache.avro.data.RecordBuilder<Profile> {

    private sparqles.avro.Endpoint endpoint;
    private java.lang.CharSequence VoID;
    private java.lang.CharSequence SD;
    private long lastUpdate;

    /** Creates a new Builder */
    private Builder() {
      super(sparqles.avro.analytics.Profile.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(sparqles.avro.analytics.Profile.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.endpoint)) {
        this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.VoID)) {
        this.VoID = data().deepCopy(fields()[1].schema(), other.VoID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SD)) {
        this.SD = data().deepCopy(fields()[2].schema(), other.SD);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastUpdate)) {
        this.lastUpdate = data().deepCopy(fields()[3].schema(), other.lastUpdate);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Profile instance */
    private Builder(sparqles.avro.analytics.Profile other) {
            super(sparqles.avro.analytics.Profile.SCHEMA$);
      if (isValidValue(fields()[0], other.endpoint)) {
        this.endpoint = data().deepCopy(fields()[0].schema(), other.endpoint);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.VoID)) {
        this.VoID = data().deepCopy(fields()[1].schema(), other.VoID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SD)) {
        this.SD = data().deepCopy(fields()[2].schema(), other.SD);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastUpdate)) {
        this.lastUpdate = data().deepCopy(fields()[3].schema(), other.lastUpdate);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'endpoint' field */
    public sparqles.avro.Endpoint getEndpoint() {
      return endpoint;
    }
    
    /** Sets the value of the 'endpoint' field */
    public sparqles.avro.analytics.Profile.Builder setEndpoint(sparqles.avro.Endpoint value) {
      validate(fields()[0], value);
      this.endpoint = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'endpoint' field has been set */
    public boolean hasEndpoint() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'endpoint' field */
    public sparqles.avro.analytics.Profile.Builder clearEndpoint() {
      endpoint = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'VoID' field */
    public java.lang.CharSequence getVoID() {
      return VoID;
    }
    
    /** Sets the value of the 'VoID' field */
    public sparqles.avro.analytics.Profile.Builder setVoID(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.VoID = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'VoID' field has been set */
    public boolean hasVoID() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'VoID' field */
    public sparqles.avro.analytics.Profile.Builder clearVoID() {
      VoID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'SD' field */
    public java.lang.CharSequence getSD() {
      return SD;
    }
    
    /** Sets the value of the 'SD' field */
    public sparqles.avro.analytics.Profile.Builder setSD(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.SD = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'SD' field has been set */
    public boolean hasSD() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'SD' field */
    public sparqles.avro.analytics.Profile.Builder clearSD() {
      SD = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'lastUpdate' field */
    public java.lang.Long getLastUpdate() {
      return lastUpdate;
    }
    
    /** Sets the value of the 'lastUpdate' field */
    public sparqles.avro.analytics.Profile.Builder setLastUpdate(long value) {
      validate(fields()[3], value);
      this.lastUpdate = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'lastUpdate' field has been set */
    public boolean hasLastUpdate() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'lastUpdate' field */
    public sparqles.avro.analytics.Profile.Builder clearLastUpdate() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Profile build() {
      try {
        Profile record = new Profile();
        record.endpoint = fieldSetFlags()[0] ? this.endpoint : (sparqles.avro.Endpoint) defaultValue(fields()[0]);
        record.VoID = fieldSetFlags()[1] ? this.VoID : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.SD = fieldSetFlags()[2] ? this.SD : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.lastUpdate = fieldSetFlags()[3] ? this.lastUpdate : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
